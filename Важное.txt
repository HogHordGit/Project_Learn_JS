JS - это прототипно ориентированный язык программирования, частный случай ООП

undefined - когда что-то неопределенно.
null - когда патаемся получить то чего нет.

Массив это частный случай объекта.
Вся информация от пользователя получается в виде строк.
Инкремент ++, декремент --
Если на удалённом репозиториии были какие-то изменения обязательно нужно git pull

(num == 50) ? console.log("Ok!") : console.log("Not Zib"); тернарный оператор
4 + 4, плюс является бинарным аргументом
+"4", унарный плюс аргумент

null, "", 0 < 10 сработает. +prompt = 0, prompt = "" если ничего не ввести.

Замыкание функции - это сама функция в месте со всеми внешними переменными, которые ей доступны.
После return код н еработает в функции
Function declaration существует перед запуском кода function calc() {}
function expression создаётся только когда до нее доходит код. Работает как переменная let calc = functia() {};

стрелочная функция - не имеет контекста вызова const calc = (a, b) => {return a + b}; 
Стрелочные функции чаще всего применяются, когда нужно передать неименованную функцию 
в качестве аргумента другой функции. 

return останавливает функцию и возвращается undefind

Принцып DRY - Don't repeat yourself. Не повторяй код, если его можно сделать меньше.

Основные методы: toUpperCase(), toLowerCase(), indexOf(), substring(a,b), parseInt(), parseFloat(), isNaN(), trim().
Object.keys(объект) - создаёт массив с названиями свойств. И потом можно проверить длину .lenght

Если функции запускаются по порядку, это не значит, что они так и запустяться. Функция с большей задержкой запустится второй.
Для этого используют callback функцию

Реструктаризация, помогает взять отделное свойство с объекта: const {border, bg} = options.colors;
console.log(border);

Псевдомассив отличается от массива тем, что на псевдомасиве нет методов. Получается с элементов на странице.

Если изменяешь значение копии объекта, то оно изменяется и в самом объекте.
Мы в переменною записсываем ссылку на объект
Когда мы клонируем объект, есть две копии: глубокая и поверхносная копии.

Когда мы слаживаем что-то со строкой, всегда получается строка

Каждый вызов функции, содаёт новое лексическое окружение со своими локальными параметрами

Чтобы поставить действие на кнопку используется addEventListener("name", function);
Всплытие событий - это когда обработчик события сначала срабатывает на самом вложенном
элементе, затем на родителе и так выше.

---------------------------------------------------------------------------------------------
Методы для скрипта в html
defer - загружает скрипты последовательно и ждет их загрузки,
и только после этого загружает следующи, запускает скрипты после прогрузки DOM дерева.

async - загружается и запускается сразу после загрузки.